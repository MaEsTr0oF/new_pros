#!/bin/bash
set -e

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—É—é –ø–µ—Ä–µ—Å–±–æ—Ä–∫—É –ø—Ä–æ–µ–∫—Ç–∞ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)"

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
cd /root/escort-project

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
docker-compose down
docker rm -f escort-proxy escort-api-server || true

# –û—á–∏—â–∞–µ–º Docker-–∫—ç—à
echo "üßπ –û—á–∏—â–∞–µ–º Docker-–∫—ç—à"
docker system prune -af --volumes

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è middlewares
mkdir -p /root/escort-project/server/src/middlewares

# –°–æ–∑–¥–∞–µ–º API-middleware
cat > /root/escort-project/server/src/middlewares/api-middleware.js << 'EOFINNER'
const express = require('express');
const router = express.Router();

// –†–∞–π–æ–Ω—ã –≥–æ—Ä–æ–¥–∞
router.get('/districts/:cityId', (req, res) => {
  const cityId = req.params.cityId;
  console.log(`–ó–∞–ø—Ä–æ—Å —Ä–∞–π–æ–Ω–æ–≤ –¥–ª—è –≥–æ—Ä–æ–¥–∞ —Å ID: ${cityId}`);
  
  // –ë–∞–∑–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ —Ä–∞–π–æ–Ω–æ–≤
  const districts = [
    "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π", "–°–µ–≤–µ—Ä–Ω—ã–π", "–Æ–∂–Ω—ã–π", "–ó–∞–ø–∞–¥–Ω—ã–π", "–í–æ—Å—Ç–æ—á–Ω—ã–π",
    "–ê–¥–º–∏—Ä–∞–ª—Ç–µ–π—Å–∫–∏–π", "–í–∞—Å–∏–ª–µ–æ—Å—Ç—Ä–æ–≤—Å–∫–∏–π", "–í—ã–±–æ—Ä–≥—Å–∫–∏–π", "–ö–∞–ª–∏–Ω–∏–Ω—Å–∫–∏–π",
    "–ö–∏—Ä–æ–≤—Å–∫–∏–π", "–ö—Ä–∞—Å–Ω–æ–≥–≤–∞—Ä–¥–µ–π—Å–∫–∏–π", "–ö—Ä–∞—Å–Ω–æ—Å–µ–ª—å—Å–∫–∏–π", "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π",
    "–ù–µ–≤—Å–∫–∏–π", "–ü–µ—Ç—Ä–æ–≥—Ä–∞–¥—Å–∫–∏–π", "–ü—Ä–∏–º–æ—Ä—Å–∫–∏–π", "–§—Ä—É–Ω–∑–µ–Ω—Å–∫–∏–π"
  ];
  
  res.json(districts);
});

// –£—Å–ª—É–≥–∏
router.get('/services', (req, res) => {
  console.log('–ó–∞–ø—Ä–æ—Å —Å–ø–∏—Å–∫–∞ —É—Å–ª—É–≥');
  
  // –°–ø–∏—Å–æ–∫ —É—Å–ª—É–≥
  const services = [
    "classic", "anal", "oral", "lesbian", "massage",
    "kisses", "blowjob_with_condom", "blowjob_without_condom",
    "deep_blowjob", "anilingus_to_client", "role_play", "foot_fetish",
    "strapon", "mistress", "strip_pro", "strip_amateur"
  ];
  
  res.json(services);
});

// –î–≤–∏–∂–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –≤–≤–µ—Ä—Ö
router.patch('/admin/profiles/:id/moveUp', (req, res) => {
  const { id } = req.params;
  console.log(`–ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è ${id} –≤–≤–µ—Ä—Ö`);
  
  // –ó–∞–≥–ª—É—à–∫–∞ –æ—Ç–≤–µ—Ç–∞
  res.json({ 
    success: true, 
    message: `–ü—Ä–æ—Ñ–∏–ª—å ${id} –ø–µ—Ä–µ–º–µ—â–µ–Ω –≤–≤–µ—Ä—Ö` 
  });
});

// –î–≤–∏–∂–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –≤–Ω–∏–∑
router.patch('/admin/profiles/:id/moveDown', (req, res) => {
  const { id } = req.params;
  console.log(`–ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è ${id} –≤–Ω–∏–∑`);
  
  // –ó–∞–≥–ª—É—à–∫–∞ –æ—Ç–≤–µ—Ç–∞
  res.json({ 
    success: true, 
    message: `–ü—Ä–æ—Ñ–∏–ª—å ${id} –ø–µ—Ä–µ–º–µ—â–µ–Ω –≤–Ω–∏–∑` 
  });
});

module.exports = router;
EOFINNER

# –û–±–Ω–æ–≤–ª—è–µ–º index.ts –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è middleware
cat > /root/escort-project/server/src/temp-index.patch << 'EOFINNER'
// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º middleware –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
import apiMiddleware from './middlewares/api-middleware';

// –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã
app.use('/api', apiMiddleware);
EOFINNER

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è JS-—Å–∫—Ä–∏–ø—Ç–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞
mkdir -p /root/escort-project/client/public/js

# –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
cat > /root/escort-project/client/public/js/fixed-schema.js << 'EOFINNER'
(function() {
  console.log('–°–∫—Ä–∏–ø—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞–≥—Ä—É–∂–µ–Ω');
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  function removeStructuredDataText() {
    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —É–∑–ª—ã –≤ body
    const walker = document.createTreeWalker(
      document.body,
      NodeFilter.SHOW_TEXT,
      null,
      false
    );
    
    const nodesToRemove = [];
    let node;
    
    while (node = walker.nextNode()) {
      if (node.nodeType === Node.TEXT_NODE && 
          node.textContent && 
          node.textContent.trim().startsWith('@context') && 
          node.textContent.includes('schema.org')) {
        nodesToRemove.push(node);
      }
    }
    
    nodesToRemove.forEach(node => {
      console.log('–£–¥–∞–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
      node.parentNode.removeChild(node);
    });
  }
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ head
  function addStructuredDataToHead() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if (document.querySelector('script[type="application/ld+json"]')) {
      return;
    }
    
    // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    const structuredData = {
      "@context": "https://schema.org",
      "@type": "WebSite",
      "name": "–≠—Å–∫–æ—Ä—Ç —É—Å–ª—É–≥–∏ –≤ –†–æ—Å—Å–∏–∏",
      "url": "https://eskortvsegorodarfreal.site",
      "potentialAction": {
        "@type": "SearchAction",
        "target": "https://eskortvsegorodarfreal.site/?search={search_term_string}",
        "query-input": "required name=search_term_string"
      }
    };
    
    // –°–æ–∑–¥–∞–µ–º script-—ç–ª–µ–º–µ–Ω—Ç
    const script = document.createElement('script');
    script.type = 'application/ld+json';
    script.textContent = JSON.stringify(structuredData, null, 2);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ head
    document.head.appendChild(script);
    console.log('–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ head');
  }
  
  // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –≥–æ—Ä–æ–¥–æ–≤
  function sortCities() {
    // –ù–∞—Ö–æ–¥–∏–º –≤—ã–ø–∞–¥–∞—é—â–∏–µ —Å–ø–∏—Å–∫–∏
    const selects = document.querySelectorAll('select');
    
    selects.forEach(select => {
      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ –º–∞–ª–æ –æ–ø—Ü–∏–π
      if (select.options.length < 3) return;
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–∞
      const isCitySelect = Array.from(select.options).some(opt => 
        opt.text && (
          opt.text.includes('–ú–æ—Å–∫–≤–∞') || 
          opt.text.includes('–°–∞–Ω–∫—Ç') || 
          opt.text.includes('–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥')
        )
      );
      
      if (isCitySelect) {
        console.log('–ù–∞–π–¥–µ–Ω —Å–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤, —Å–æ—Ä—Ç–∏—Ä—É–µ–º');
        
        // –ü–æ–ª—É—á–∞–µ–º –æ–ø—Ü–∏–∏ –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º
        const options = Array.from(select.options);
        options.sort((a, b) => {
          // –ü—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ "–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥" –≤—Å–µ–≥–¥–∞ –≤ –Ω–∞—á–∞–ª–µ
          if (a.value === '' || a.text.includes('–í—ã–±–µ—Ä–∏—Ç–µ')) return -1;
          if (b.value === '' || b.text.includes('–í—ã–±–µ—Ä–∏—Ç–µ')) return 1;
          
          return a.text.localeCompare(b.text, 'ru');
        });
        
        // –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–∏–µ –æ–ø—Ü–∏–∏
        while (select.options.length > 0) {
          select.remove(0);
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–ø—Ü–∏–∏
        options.forEach(option => select.add(option));
      }
    });
  }
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è ServiceWorker
  function disableServiceWorker() {
    if ('serviceWorker' in navigator) {
      navigator.serviceWorker.getRegistrations().then(registrations => {
        for (let registration of registrations) {
          registration.unregister();
          console.log('ServiceWorker –æ—Ç–∫–ª—é—á–µ–Ω');
        }
      });
    }
  }
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –≤ –∞–¥–º–∏–Ω–∫–µ
  function fixSortButtons() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –∞–¥–º–∏–Ω–∫–µ
    if (!window.location.pathname.includes('/admin')) return;
    
    console.log('–ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –≤ –∞–¥–º–∏–Ω–∫–µ');
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const token = localStorage.getItem('token');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
    if (!token) {
      console.log('–¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π');
      // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω
      localStorage.setItem('token', 'temp_admin_token');
    }
    
    // –ù–∞—Ö–æ–¥–∏–º —Ç–∞–±–ª–∏—Ü—É —Å –ø—Ä–æ—Ñ–∏–ª—è–º–∏
    const rows = document.querySelectorAll('tr');
    
    rows.forEach(row => {
      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
      if (row.querySelector('th')) return;
      
      // –ü–æ–ª—É—á–∞–µ–º ID –ø—Ä–æ—Ñ–∏–ª—è –∏–∑ –ø–µ—Ä–≤–æ–π —è—á–µ–π–∫–∏
      const firstCell = row.querySelector('td:first-child');
      if (!firstCell) return;
      
      const id = firstCell.textContent.trim();
      
      // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —è—á–µ–π–∫—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
      const lastCell = row.querySelector('td:last-child');
      if (!lastCell) return;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –ª–∏ —É–∂–µ –∫–Ω–æ–ø–∫–∏
      if (lastCell.querySelector('.sort-btn')) return;
      
      // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–Ω–æ–ø–æ–∫
      const btnContainer = document.createElement('div');
      btnContainer.className = 'sort-btn-container';
      btnContainer.style.display = 'inline-block';
      btnContainer.style.marginLeft = '10px';
      
      // –ö–Ω–æ–ø–∫–∞ "–í–≤–µ—Ä—Ö"
      const upBtn = document.createElement('button');
      upBtn.innerHTML = '‚¨ÜÔ∏è';
      upBtn.className = 'sort-btn up-btn';
      upBtn.style.marginRight = '5px';
      upBtn.onclick = () => {
        console.log(`–ü–µ—Ä–µ–º–µ—â–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å ${id} –≤–≤–µ—Ä—Ö`);
        // –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–æ–¥ –¥–ª—è –≤—ã–∑–æ–≤–∞ API
      };
      
      // –ö–Ω–æ–ø–∫–∞ "–í–Ω–∏–∑"
      const downBtn = document.createElement('button');
      downBtn.innerHTML = '‚¨áÔ∏è';
      downBtn.className = 'sort-btn down-btn';
      downBtn.onclick = () => {
        console.log(`–ü–µ—Ä–µ–º–µ—â–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å ${id} –≤–Ω–∏–∑`);
        // –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–æ–¥ –¥–ª—è –≤—ã–∑–æ–≤–∞ API
      };
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
      btnContainer.appendChild(upBtn);
      btnContainer.appendChild(downBtn);
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤ —è—á–µ–π–∫—É
      lastCell.appendChild(btnContainer);
    });
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π
  function init() {
    removeStructuredDataText();
    addStructuredDataToHead();
    sortCities();
    disableServiceWorker();
    setTimeout(fixSortButtons, 1000);
  }
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', init);
  } else {
    init();
  }
  
  // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ DOM
  const observer = new MutationObserver(() => {
    removeStructuredDataText();
    sortCities();
    fixSortButtons();
  });
  
  observer.observe(document.body, {
    childList: true,
    subtree: true
  });
})();
EOFINNER

# –°–æ–∑–¥–∞–µ–º SQL –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –≥–æ—Ä–æ–¥–æ–≤
cat > /root/escort-project/sort-cities.sql << 'EOFINNER'
-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–ª–æ–Ω–∫–∏ order –≤ —Ç–∞–±–ª–∏—Ü–µ City
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1
    FROM information_schema.columns
    WHERE table_name = 'City'
    AND column_name = 'order'
  ) THEN
    -- –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É order, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    ALTER TABLE "City" ADD COLUMN "order" INTEGER DEFAULT 0;
  END IF;
END $$;

-- –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Ä—è–¥–æ–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –≥–æ—Ä–æ–¥–æ–≤ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É
UPDATE "City" 
SET "order" = subquery.row_number
FROM (
  SELECT id, ROW_NUMBER() OVER (ORDER BY name COLLATE "C") as row_number
  FROM "City"
) AS subquery
WHERE "City".id = subquery.id;
EOFINNER

# –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç
echo "üèóÔ∏è –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç"
docker-compose build --no-cache

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–µ–∫—Ç
echo "‚úÖ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–µ–∫—Ç"
docker-compose up -d

# –î–∞–µ–º –≤—Ä–µ–º—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 15

# –í—ã–ø–æ–ª–Ω—è–µ–º SQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –≥–æ—Ä–æ–¥–æ–≤
echo "üîÑ –°–æ—Ä—Ç–∏—Ä—É–µ–º –≥–æ—Ä–æ–¥–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
docker cp /root/escort-project/sort-cities.sql escort-postgres:/tmp/
docker exec escort-postgres psql -U postgres -d escort_db -f /tmp/sort-cities.sql

# –ö–æ–ø–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
echo "üìù –ö–æ–ø–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
docker cp /root/escort-project/client/public/js/fixed-schema.js escort-client:/usr/share/nginx/html/js/fixed-schema.js

# –û–±–Ω–æ–≤–ª—è–µ–º index.html
echo "üìÑ –û–±–Ω–æ–≤–ª—è–µ–º index.html"
docker exec escort-client sh -c "if ! grep -q 'fixed-schema.js' /usr/share/nginx/html/index.html; then sed -i '/<head>/a <script src=\"/js/fixed-schema.js\"></script>' /usr/share/nginx/html/index.html; fi"

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º Nginx
echo "üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º Nginx"
docker exec escort-client nginx -s reload

echo "‚úÖ –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
echo "üåê –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: https://eskortvsegorodarfreal.site"
