#!/bin/bash

echo "üîß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞ –ø—Ä–æ—Ñ–∏–ª–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –ø—Ä–æ—Ñ–∏–ª–µ–π
CONTROLLER_FILE="/root/escort-project/server/src/controllers/profileController.ts"

if [ -f "$CONTROLLER_FILE" ]; then
  # –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ moveProfileUp –∏ moveProfileDown –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞, –µ—Å–ª–∏ –∏—Ö –µ—â–µ –Ω–µ—Ç
  if ! grep -q "moveProfileUp" "$CONTROLLER_FILE"; then
    cat >> "$CONTROLLER_FILE" << 'ENDCONTROLLER'

export const moveProfileUp = async (req: Request, res: Response) => {
  try {
    const { id } = req.params;
    const profileId = Number(id);
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å
    const currentProfile = await prisma.profile.findUnique({
      where: { id: profileId },
      select: { order: true, cityId: true }
    });

    if (!currentProfile) {
      return res.status(404).json({ error: '–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω' });
    }

    // –ù–∞—Ö–æ–¥–∏–º –ø—Ä–æ—Ñ–∏–ª—å –≤—ã—à–µ –ø–æ –ø–æ—Ä—è–¥–∫—É –≤ —Ç–æ–º –∂–µ –≥–æ—Ä–æ–¥–µ
    const prevProfile = await prisma.profile.findFirst({
      where: { 
        cityId: currentProfile.cityId,
        order: { lt: currentProfile.order }
      },
      orderBy: { order: 'desc' },
      select: { id: true, order: true }
    });

    if (!prevProfile) {
      return res.status(400).json({ message: '–ü—Ä–æ—Ñ–∏–ª—å —É–∂–µ –Ω–∞ –≤–µ—Ä—Ö–Ω–µ–π –ø–æ–∑–∏—Ü–∏–∏' });
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Ä—è–¥–æ–∫ –ø—Ä–æ—Ñ–∏–ª–µ–π
    await prisma.$transaction([
      prisma.profile.update({
        where: { id: profileId },
        data: { order: prevProfile.order }
      }),
      prisma.profile.update({
        where: { id: prevProfile.id },
        data: { order: currentProfile.order }
      })
    ]);

    res.json({ message: '–ü–æ—Ä—è–¥–æ–∫ –ø—Ä–æ—Ñ–∏–ª–µ–π —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω' });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è –≤–≤–µ—Ä—Ö:', error);
    res.status(500).json({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –≤–≤–µ—Ä—Ö' });
  }
};

export const moveProfileDown = async (req: Request, res: Response) => {
  try {
    const { id } = req.params;
    const profileId = Number(id);
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å
    const currentProfile = await prisma.profile.findUnique({
      where: { id: profileId },
      select: { order: true, cityId: true }
    });

    if (!currentProfile) {
      return res.status(404).json({ error: '–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω' });
    }

    // –ù–∞—Ö–æ–¥–∏–º –ø—Ä–æ—Ñ–∏–ª—å –Ω–∏–∂–µ –ø–æ –ø–æ—Ä—è–¥–∫—É –≤ —Ç–æ–º –∂–µ –≥–æ—Ä–æ–¥–µ
    const nextProfile = await prisma.profile.findFirst({
      where: { 
        cityId: currentProfile.cityId,
        order: { gt: currentProfile.order }
      },
      orderBy: { order: 'asc' },
      select: { id: true, order: true }
    });

    if (!nextProfile) {
      return res.status(400).json({ message: '–ü—Ä–æ—Ñ–∏–ª—å —É–∂–µ –Ω–∞ –Ω–∏–∂–Ω–µ–π –ø–æ–∑–∏—Ü–∏–∏' });
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Ä—è–¥–æ–∫ –ø—Ä–æ—Ñ–∏–ª–µ–π
    await prisma.$transaction([
      prisma.profile.update({
        where: { id: profileId },
        data: { order: nextProfile.order }
      }),
      prisma.profile.update({
        where: { id: nextProfile.id },
        data: { order: currentProfile.order }
      })
    ]);

    res.json({ message: '–ü–æ—Ä—è–¥–æ–∫ –ø—Ä–æ—Ñ–∏–ª–µ–π —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω' });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è –≤–Ω–∏–∑:', error);
    res.status(500).json({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –≤–Ω–∏–∑' });
  }
};
ENDCONTROLLER
  fi
fi

# –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä—à—Ä—É—Ç—ã –≤ –∏–Ω–¥–µ–∫—Å–Ω—ã–π —Ñ–∞–π–ª —Å–µ—Ä–≤–µ—Ä–∞
SERVER_INDEX="/root/escort-project/server/src/index.ts"

if [ -f "$SERVER_INDEX" ]; then
  # –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–π, –µ—Å–ª–∏ –∏—Ö –µ—â–µ –Ω–µ—Ç
  if ! grep -q "move-up" "$SERVER_INDEX"; then
    # –ù–∞—Ö–æ–¥–∏–º –º–µ—Å—Ç–æ –≥–¥–µ –æ–±—ä—è–≤–ª–µ–Ω—ã –∑–∞—â–∏—â–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã
    ROUTES_LINE=$(grep -n "app.use('/api/admin'" "$SERVER_INDEX" | cut -d':' -f1)
    
    if [ -n "$ROUTES_LINE" ]; then
      # –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ—Ñ–∏–ª–µ–π
      LAST_PROFILE_ROUTE=$(grep -n "app.patch('/api/admin/profiles/" "$SERVER_INDEX" | tail -1 | cut -d':' -f1)
      
      if [ -n "$LAST_PROFILE_ROUTE" ]; then
        # –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª–µ–π
        sed -i "$LAST_PROFILE_ROUTE a\\app.post('/api/admin/profiles/:id/move-up', profileController.moveProfileUp);\napp.post('/api/admin/profiles/:id/move-down', profileController.moveProfileDown);" "$SERVER_INDEX"
        
        echo "‚úÖ –ú–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–π –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ $SERVER_INDEX"
      else
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –º–µ—Å—Ç–æ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤"
      fi
    else
      echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–∞–∑–¥–µ–ª –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤"
    fi
  else
    echo "‚úÖ –ú–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–π —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç"
  fi
fi

echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
