#!/bin/bash
set -e

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—É—é –ø–µ—Ä–µ—Å–±–æ—Ä–∫—É –ø—Ä–æ–µ–∫—Ç–∞ (—Ñ–∏–Ω–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è)"

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
cd /root/escort-project

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
docker-compose down
docker rm -f escort-proxy escort-api-server || true

# –û—á–∏—â–∞–µ–º Docker-–∫—ç—à
echo "üßπ –û—á–∏—â–∞–µ–º Docker-–∫—ç—à"
docker system prune -af --volumes

# –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç
echo "üèóÔ∏è –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç"
docker-compose build --no-cache

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–µ–∫—Ç
echo "‚úÖ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–µ–∫—Ç"
docker-compose up -d

# –î–∞–µ–º –≤—Ä–µ–º—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 15

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å–∫—Ä–∏–ø—Ç–æ–≤
mkdir -p /usr/share/nginx/html/js

# –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
cat > /root/escort-project/fixed-schema.js << 'EOFINNER'
(function() {
  console.log('–°–∫—Ä–∏–ø—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞–≥—Ä—É–∂–µ–Ω');
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  function removeStructuredDataText() {
    // –ò—â–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —É–∑–ª—ã —Å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    const walker = document.createTreeWalker(
      document.body,
      NodeFilter.SHOW_TEXT,
      null,
      false
    );
    
    const textNodes = [];
    let node;
    
    while (node = walker.nextNode()) {
      if (node.textContent && 
          node.textContent.trim().includes('"@context": "https://schema.org"') &&
          node.textContent.trim().includes('"@type": "WebSite"')) {
        textNodes.push(node);
      }
    }
    
    textNodes.forEach(node => {
      console.log('–£–¥–∞–ª—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
      node.parentNode.removeChild(node);
    });
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ head
  function addStructuredDataToHead() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ head
    if (document.querySelector('script[type="application/ld+json"]')) {
      return;
    }
    
    // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    const structuredData = {
      "@context": "https://schema.org",
      "@type": "WebSite",
      "name": "–≠—Å–∫–æ—Ä—Ç —É—Å–ª—É–≥–∏ –≤ –†–æ—Å—Å–∏–∏",
      "url": "https://eskortvsegorodarfreal.site",
      "potentialAction": {
        "@type": "SearchAction",
        "target": "https://eskortvsegorodarfreal.site/?search={search_term_string}",
        "query-input": "required name=search_term_string"
      }
    };
    
    // –°–æ–∑–¥–∞–µ–º script-—ç–ª–µ–º–µ–Ω—Ç
    const script = document.createElement('script');
    script.type = 'application/ld+json';
    script.textContent = JSON.stringify(structuredData, null, 2);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ head
    document.head.appendChild(script);
    console.log('–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ head');
  }
  
  // –û—Ç–∫–ª—é—á–∞–µ–º ServiceWorker
  function disableServiceWorker() {
    if ('serviceWorker' in navigator) {
      navigator.serviceWorker.getRegistrations().then(registrations => {
        registrations.forEach(registration => {
          registration.unregister();
          console.log('ServiceWorker –æ—Ç–∫–ª—é—á–µ–Ω');
        });
      });
    }
  }
  
  // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –≥–æ—Ä–æ–¥–æ–≤
  function sortCities() {
    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –≤—ã–ø–∞–¥–∞—é—â–∏–µ —Å–ø–∏—Å–∫–∏
    const selects = document.querySelectorAll('select');
    
    selects.forEach(select => {
      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–ø–∏—Å–∫–∏ —Å –º–µ–Ω–µ–µ —á–µ–º 3 –æ–ø—Ü–∏—è–º–∏
      if (select.options.length < 3) return;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Å–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤
      const options = Array.from(select.options);
      const isCitySelect = options.some(option => 
        option.text && (
          option.text.includes('–ú–æ—Å–∫–≤–∞') || 
          option.text.includes('–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥') || 
          option.text.includes('–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫')
        )
      );
      
      if (isCitySelect) {
        console.log('–ù–∞–π–¥–µ–Ω —Å–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤, —Å–æ—Ä—Ç–∏—Ä—É–µ–º');
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        const selectedValue = select.value;
        
        // –°–æ—Ä—Ç–∏—Ä—É–µ–º –æ–ø—Ü–∏–∏
        options.sort((a, b) => {
          // "–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥" –≤—Å–µ–≥–¥–∞ –≤ –Ω–∞—á–∞–ª–æ
          if (a.value === '' || a.text.includes('–í—ã–±–µ—Ä–∏—Ç–µ')) return -1;
          if (b.value === '' || b.text.includes('–í—ã–±–µ—Ä–∏—Ç–µ')) return 1;
          
          // –û—Å—Ç–∞–ª—å–Ω—ã–µ –≥–æ—Ä–æ–¥–∞ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É
          return a.text.localeCompare(b.text, 'ru');
        });
        
        // –£–¥–∞–ª—è–µ–º –≤—Å–µ –æ–ø—Ü–∏–∏
        while (select.options.length > 0) {
          select.remove(0);
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–ø—Ü–∏–∏
        options.forEach(option => select.add(option));
        
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        if (selectedValue) {
          select.value = selectedValue;
        }
      }
    });
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
  function init() {
    console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π');
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
    removeStructuredDataText();
    addStructuredDataToHead();
    disableServiceWorker();
    sortCities();
    
    // –ü–æ–≤—Ç–æ—Ä—è–µ–º –≤—ã–∑–æ–≤—ã —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞–µ–º–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    setTimeout(removeStructuredDataText, 1000);
    setTimeout(sortCities, 1000);
    setTimeout(removeStructuredDataText, 3000);
    setTimeout(sortCities, 3000);
  }
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  document.addEventListener('DOMContentLoaded', init);
  
  // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ DOM
  const observer = new MutationObserver(() => {
    removeStructuredDataText();
    sortCities();
  });
  
  observer.observe(document.body, {
    childList: true,
    subtree: true
  });
})();
EOFINNER

# –ö–æ–ø–∏—Ä—É–µ–º —Å–∫—Ä–∏–ø—Ç –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
docker cp /root/escort-project/fixed-schema.js escort-client:/usr/share/nginx/html/js/fixed-schema.js

# –û–±–Ω–æ–≤–ª—è–µ–º index.html
echo "üìÑ –î–æ–±–∞–≤–ª—è–µ–º —Å–∫—Ä–∏–ø—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –≤ index.html"
docker exec escort-client sh -c "sed -i '/<head>/a <script src=\"/js/fixed-schema.js\"></script>' /usr/share/nginx/html/index.html"

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º Nginx
docker exec escort-client nginx -s reload

echo "‚úÖ –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
echo "üåê –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: https://eskortvsegorodarfreal.site"
