#!/bin/bash
set -e

echo "üîß –°–æ–∑–¥–∞–µ–º –º–æ–¥—É–ª—å API –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è API
API_DIR="/root/escort-project/client/src/api"
mkdir -p "$API_DIR"

# –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª API –¥–ª—è –ø—Ä–æ—Ñ–∏–ª–µ–π
cat > "${API_DIR}/index.ts" << 'EOFINNER'
import axios from 'axios';
import { API_URL } from '../config';

const getToken = () => localStorage.getItem('token');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Å —Ç–æ–∫–µ–Ω–æ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
export const getAuthHeaders = () => {
  const token = getToken();
  return {
    headers: {
      Authorization: token ? `Bearer ${token}` : ''
    }
  };
};

// API –¥–ª—è –ø—Ä–æ—Ñ–∏–ª–µ–π
export const profilesApi = {
  // –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Ñ–∏–ª–∏
  getAll: async () => {
    return axios.get(`${API_URL}/admin/profiles`, getAuthHeaders());
  },
  
  // –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ ID
  getById: async (id: number) => {
    return axios.get(`${API_URL}/admin/profiles/${id}`, getAuthHeaders());
  },
  
  // –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å
  create: async (profileData: any) => {
    return axios.post(`${API_URL}/admin/profiles`, profileData, getAuthHeaders());
  },
  
  // –û–±–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å
  update: async (id: number, profileData: any) => {
    return axios.put(`${API_URL}/admin/profiles/${id}`, profileData, getAuthHeaders());
  },
  
  // –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
  delete: async (id: number) => {
    return axios.delete(`${API_URL}/admin/profiles/${id}`, getAuthHeaders());
  },
  
  // –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –≤–≤–µ—Ä—Ö
  moveUp: async (id: number) => {
    return axios.patch(`${API_URL}/admin/profiles/${id}/moveUp`, {}, getAuthHeaders());
  },
  
  // –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –≤–Ω–∏–∑
  moveDown: async (id: number) => {
    return axios.patch(`${API_URL}/admin/profiles/${id}/moveDown`, {}, getAuthHeaders());
  },
  
  // –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
  verify: async (id: number) => {
    return axios.patch(`${API_URL}/admin/profiles/${id}/verify`, {}, getAuthHeaders());
  }
};

// API –¥–ª—è –≥–æ—Ä–æ–¥–æ–≤
export const citiesApi = {
  // –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –≥–æ—Ä–æ–¥–∞
  getAll: async () => {
    return axios.get(`${API_URL}/cities`);
  },
  
  // –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –≥–æ—Ä–æ–¥
  create: async (cityData: any) => {
    return axios.post(`${API_URL}/admin/cities`, cityData, getAuthHeaders());
  },
  
  // –û–±–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –≥–æ—Ä–æ–¥
  update: async (id: number, cityData: any) => {
    return axios.put(`${API_URL}/admin/cities/${id}`, cityData, getAuthHeaders());
  },
  
  // –£–¥–∞–ª–∏—Ç—å –≥–æ—Ä–æ–¥
  delete: async (id: number) => {
    return axios.delete(`${API_URL}/admin/cities/${id}`, getAuthHeaders());
  }
};

// API –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
export const authApi = {
  // –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É
  login: async (username: string, password: string) => {
    return axios.post(`${API_URL}/auth/login`, { username, password });
  },
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Ç–æ–∫–µ–Ω–∞
  checkToken: async () => {
    return axios.get(`${API_URL}/admin/profile`, getAuthHeaders());
  }
};

export default {
  profiles: profilesApi,
  cities: citiesApi,
  auth: authApi
};
EOFINNER

echo "‚úÖ –ú–æ–¥—É–ª—å API —Å–æ–∑–¥–∞–Ω"

# –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç ProfileOrderButtons
COMPONENT_PATH="/root/escort-project/client/src/components/admin/ProfileOrderButtons.tsx"

# –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
cp $COMPONENT_PATH ${COMPONENT_PATH}.bak

# –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
cat > "$COMPONENT_PATH" << 'EOFINNER'
import React from 'react';
import { Button, Box, Tooltip } from '@mui/material';
import ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';
import ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';
import { profilesApi } from '../../api';

interface ProfileOrderButtonsProps {
  profileId: number;
  onOrderChange?: () => void;
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
 */
const ProfileOrderButtons: React.FC<ProfileOrderButtonsProps> = ({ profileId, onOrderChange }) => {
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–í–≤–µ—Ä—Ö"
  const handleMoveUp = async () => {
    try {
      await profilesApi.moveUp(profileId);
      
      // –í—ã–∑—ã–≤–∞–µ–º –∫–æ–ª–ª–±—ç–∫ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞
      if (onOrderChange) {
        onOrderChange();
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è –≤–≤–µ—Ä—Ö:', error);
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–í–Ω–∏–∑"
  const handleMoveDown = async () => {
    try {
      await profilesApi.moveDown(profileId);
      
      // –í—ã–∑—ã–≤–∞–µ–º –∫–æ–ª–ª–±—ç–∫ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞
      if (onOrderChange) {
        onOrderChange();
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è –≤–Ω–∏–∑:', error);
    }
  };

  return (
    <Box sx={{ display: 'flex', gap: 1 }}>
      <Tooltip title="–ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –≤–≤–µ—Ä—Ö">
        <Button
          size="small"
          variant="outlined"
          color="primary"
          onClick={handleMoveUp}
          sx={{ minWidth: 'auto', p: 0.5 }}
        >
          <ArrowUpwardIcon fontSize="small" />
        </Button>
      </Tooltip>
      <Tooltip title="–ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –≤–Ω–∏–∑">
        <Button
          size="small"
          variant="outlined"
          color="primary"
          onClick={handleMoveDown}
          sx={{ minWidth: 'auto', p: 0.5 }}
        >
          <ArrowDownwardIcon fontSize="small" />
        </Button>
      </Tooltip>
    </Box>
  );
};

export default ProfileOrderButtons;
EOFINNER

echo "‚úÖ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç ProfileOrderButtons –æ–±–Ω–æ–≤–ª–µ–Ω"
