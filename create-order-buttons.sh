#!/bin/bash
set -e

echo "üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ ProfileOrderButtons"

# –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
COMPONENTS_DIR="/root/escort-project/client/src/components/admin"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
COMPONENT_PATH="${COMPONENTS_DIR}/ProfileOrderButtons.tsx"

if [ ! -f "$COMPONENT_PATH" ]; then
  # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  mkdir -p "$COMPONENTS_DIR"
  
  # –°–æ–∑–¥–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç ProfileOrderButtons
  cat > "$COMPONENT_PATH" << 'EOFINNER'
import React from 'react';
import { Button, Box, Tooltip } from '@mui/material';
import ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';
import ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';
import axios from 'axios';
import { API_URL } from '../../config';

interface ProfileOrderButtonsProps {
  profileId: number;
  onOrderChange?: () => void;
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
 */
const ProfileOrderButtons: React.FC<ProfileOrderButtonsProps> = ({ profileId, onOrderChange }) => {
  const token = localStorage.getItem('token');

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–í–≤–µ—Ä—Ö"
  const handleMoveUp = async () => {
    try {
      if (!token) {
        console.error('–ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
        return;
      }

      await axios.patch(
        `${API_URL}/admin/profiles/${profileId}/moveUp`,
        {},
        {
          headers: {
            Authorization: `Bearer ${token}`
          }
        }
      );

      // –í—ã–∑—ã–≤–∞–µ–º –∫–æ–ª–ª–±—ç–∫ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞
      if (onOrderChange) {
        onOrderChange();
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è –≤–≤–µ—Ä—Ö:', error);
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–í–Ω–∏–∑"
  const handleMoveDown = async () => {
    try {
      if (!token) {
        console.error('–ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
        return;
      }

      await axios.patch(
        `${API_URL}/admin/profiles/${profileId}/moveDown`,
        {},
        {
          headers: {
            Authorization: `Bearer ${token}`
          }
        }
      );

      // –í—ã–∑—ã–≤–∞–µ–º –∫–æ–ª–ª–±—ç–∫ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞
      if (onOrderChange) {
        onOrderChange();
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è –≤–Ω–∏–∑:', error);
    }
  };

  return (
    <Box sx={{ display: 'flex', gap: 1 }}>
      <Tooltip title="–ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –≤–≤–µ—Ä—Ö">
        <Button
          size="small"
          variant="outlined"
          color="primary"
          onClick={handleMoveUp}
          sx={{ minWidth: 'auto', p: 0.5 }}
        >
          <ArrowUpwardIcon fontSize="small" />
        </Button>
      </Tooltip>
      <Tooltip title="–ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –≤–Ω–∏–∑">
        <Button
          size="small"
          variant="outlined"
          color="primary"
          onClick={handleMoveDown}
          sx={{ minWidth: 'auto', p: 0.5 }}
        >
          <ArrowDownwardIcon fontSize="small" />
        </Button>
      </Tooltip>
    </Box>
  );
};

export default ProfileOrderButtons;
EOFINNER

  echo "‚úÖ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç ProfileOrderButtons —Å–æ–∑–¥–∞–Ω"
else
  echo "‚úÖ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç ProfileOrderButtons —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi
