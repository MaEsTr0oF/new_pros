#!/bin/bash
set -e

echo "üîß –ù–∞—á–∏–Ω–∞–µ–º —Ä—É—á–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞..."

# 1. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
cd /root/escort-project
docker-compose down

# 2. –°–æ–∑–¥–∞–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
echo "üìÅ –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..."
mkdir -p /root/escort-project/server/src/middleware
mkdir -p /root/escort-project/client/public

# 3. –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª middleware –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤
echo "üåê –°–æ–∑–¥–∞–µ–º API middleware..."
cat > /root/escort-project/server/src/middleware/api-middleware.ts << 'MIDDLEWARE_EOF'
import { Request, Response, NextFunction } from 'express';

export const apiMiddleware = (req: Request, res: Response, next: NextFunction) => {
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ /api/services
  if (req.path === '/api/services') {
    const services = [
      'classic', 'anal', 'lesbian', 'group_mmf', 'group_ffm', 'with_toys', 'in_car',
      'blowjob_with_condom', 'blowjob_without_condom', 'deep_blowjob', 'car_blowjob',
      'anilingus_to_client', 'fisting_to_client', 'kisses', 'light_domination', 'mistress',
      'flogging', 'trampling', 'face_sitting', 'strapon', 'bondage', 'slave', 'role_play',
      'foot_fetish', 'golden_rain_out', 'golden_rain_in', 'copro_out', 'copro_in', 'enema',
      'relaxing', 'professional', 'body_massage', 'lingam_massage', 'four_hands', 'urological',
      'strip_pro', 'strip_amateur', 'belly_dance', 'twerk', 'lesbian_show', 'sex_chat',
      'phone_sex', 'video_sex', 'photo_video', 'invite_girlfriend', 'invite_friend',
      'escort', 'photoshoot', 'skirt'
    ];
    return res.json(services);
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ /api/districts/{cityId}
  if (req.path.match(/^\/api\/districts\/\d+$/)) {
    const districts = [
      '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π', '–ê–¥–º–∏—Ä–∞–ª—Ç–µ–π—Å–∫–∏–π', '–í–∞—Å–∏–ª–µ–æ—Å—Ç—Ä–æ–≤—Å–∫–∏–π', '–í—ã–±–æ—Ä–≥—Å–∫–∏–π', 
      '–ö–∞–ª–∏–Ω–∏–Ω—Å–∫–∏–π', '–ö–∏—Ä–æ–≤—Å–∫–∏–π', '–ö–æ–ª–ø–∏–Ω—Å–∫–∏–π', '–ö—Ä–∞—Å–Ω–æ–≥–≤–∞—Ä–¥–µ–π—Å–∫–∏–π',
      '–ö—Ä–∞—Å–Ω–æ—Å–µ–ª—å—Å–∫–∏–π', '–ö—Ä–æ–Ω—à—Ç–∞–¥—Ç—Å–∫–∏–π', '–ö—É—Ä–æ—Ä—Ç–Ω—ã–π', '–ú–æ—Å–∫–æ–≤—Å–∫–∏–π',
      '–ù–µ–≤—Å–∫–∏–π', '–ü–µ—Ç—Ä–æ–≥—Ä–∞–¥—Å–∫–∏–π', '–ü–µ—Ç—Ä–æ–¥–≤–æ—Ä—Ü–æ–≤—ã–π', '–ü—Ä–∏–º–æ—Ä—Å–∫–∏–π',
      '–ü—É—à–∫–∏–Ω—Å–∫–∏–π', '–§—Ä—É–Ω–∑–µ–Ω—Å–∫–∏–π', '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π'
    ];
    return res.json(districts);
  }

  next();
};
MIDDLEWARE_EOF

# 4. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º index.ts, –¥–æ–±–∞–≤–ª—è—è –∏–º–ø–æ—Ä—Ç middleware
echo "üìÑ –û–±–Ω–æ–≤–ª—è–µ–º index.ts..."
cp /root/escort-project/server/src/index.ts /root/escort-project/server/src/index.ts.bak
cat > /root/escort-project/server/src/index.ts << 'INDEX_EOF'
import express from 'express';
import cors from 'cors';
import dotenv from 'dotenv';
import { PrismaClient } from '@prisma/client';
import * as profileController from './controllers/profileController';
import * as cityController from './controllers/cityController';
import * as authController from './controllers/authController';
import * as settingsController from './controllers/settingsController';
import { authMiddleware } from './middleware/auth';
import { apiMiddleware } from './middleware/api-middleware';

dotenv.config();

const app = express();
const prisma = new PrismaClient();
const port = process.env.PORT || 5001;

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
async function checkDatabaseConnection() {
  try {
    await prisma.$connect();
    console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞–¥–º–∏–Ω–∞
    const adminCount = await prisma.admin.count();
    if (adminCount === 0) {
      // –°–æ–∑–¥–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞ –µ—Å–ª–∏ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ
      const defaultAdmin = await prisma.admin.create({
        data: {
          username: 'admin',
          password: '$2a$10$K.0HwpsoPDGaB/atFBmmXOGTw4ceeg33.WXgRWQP4hRj0IXIWEkyG', // –ø–∞—Ä–æ–ª—å: admin123
        },
      });
      console.log('‚úÖ –°–æ–∑–¥–∞–Ω –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä (–ª–æ–≥–∏–Ω: admin, –ø–∞—Ä–æ–ª—å: admin123)');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    const settingsCount = await prisma.settings.count();
    if (settingsCount === 0) {
      await prisma.settings.create({ data: {} }); // –°–æ–∑–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      console.log('‚úÖ –°–æ–∑–¥–∞–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', error);
    process.exit(1);
  }
}

// Middleware
app.use(cors({
  origin: process.env.CLIENT_URL || 'https://eskortvsegorodarfreal.site',
  credentials: true,
  methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],
  allowedHeaders: ['Content-Type', 'Authorization', 'X-Forwarded-Proto', 'X-Real-IP', 'X-Forwarded-For', 'X-Forwarded-Host', 'X-Forwarded-Port']
}));

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –ø—Ä–æ–∫—Å–∏
app.set('trust proxy', 1);

app.use(express.json({ limit: '50mb' }));
app.use(express.urlencoded({ extended: true, limit: '50mb' }));

// Middleware –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤
app.use((req, res, next) => {
  console.log(`${new Date().toISOString()} - ${req.method} ${req.url}`);
  next();
});

// –î–æ–±–∞–≤–ª—è–µ–º middleware –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö API –º–∞—Ä—à—Ä—É—Ç–æ–≤
app.use('/api', apiMiddleware);

// –ü—É–±–ª–∏—á–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã
app.get('/api/health', (req, res) => {
  res.json({ status: 'ok', timestamp: new Date().toISOString() });
});

app.get('/api/profiles', profileController.getProfiles);
app.get('/api/profiles/:id', profileController.getProfileById);
app.get('/api/cities', cityController.getCities);
app.get('/api/settings/public', settingsController.getPublicSettings);

// –ú–∞—Ä—à—Ä—É—Ç—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
app.post('/api/auth/login', authController.login);

// –ó–∞—â–∏—â–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã (—Ç—Ä–µ–±—É—é—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏)
app.use('/api/admin', authMiddleware);
app.get('/api/admin/profiles', profileController.getProfiles);
app.post('/api/admin/profiles', profileController.createProfile);
app.put('/api/admin/profiles/:id', profileController.updateProfile);
app.delete('/api/admin/profiles/:id', profileController.deleteProfile);
app.patch('/api/admin/profiles/:id/verify', profileController.verifyProfile);
app.post('/api/admin/cities', cityController.createCity);
app.put('/api/admin/cities/:id', cityController.updateCity);
app.delete('/api/admin/cities/:id', cityController.deleteCity);
app.get('/api/admin/settings', settingsController.getSettings);
app.put('/api/admin/settings', settingsController.updateSettings);

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
app.use((err: Error, req: express.Request, res: express.Response, next: express.NextFunction) => {
  console.error(err.stack);
  res.status(500).json({ message: '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!' });
});

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
checkDatabaseConnection().then(() => {
  app.listen(port, () => {
    console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${port}`);
    console.log(`üìù –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: https://eskortvsegorodarfreal.site/admin`);
    console.log(`üîë API –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: https://eskortvsegorodarfreal.site/api`);
  });
}).catch((error) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
  process.exit(1);
});
INDEX_EOF

# 5. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º api/index.ts
echo "üîÑ –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π API —Ñ–∞–π–ª..."
cp /root/escort-project/client/src/api/index.ts /root/escort-project/client/src/api/index.ts.bak
cat > /root/escort-project/client/src/api/index.ts << 'API_EOF'
import axios from 'axios';
import { API_URL } from '../config';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –∏–∑ localStorage
export const getToken = () => {
  return localStorage.getItem('auth_token');
};

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ axios —Å –±–∞–∑–æ–≤—ã–º URL
const api = axios.create({
  baseURL: API_URL,
});

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∫ –∑–∞–ø—Ä–æ—Å–∞–º
export const getAuthHeaders = () => {
  const token = getToken();
  console.log("Auth headers with token:", token ? "Bearer " + token.substring(0, 10) + "..." : "No token");
  return {
    headers: {
      Authorization: token ? `Bearer ${token}` : ''
    }
  };
};

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ü–µ–ø—Ç–æ—Ä–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∫–æ –≤—Å–µ–º –∑–∞–ø—Ä–æ—Å–∞–º
api.interceptors.request.use((config) => {
  const token = getToken();
  if (token) {
    config.headers.Authorization = `Bearer ${token}`;
  }
  return config;
});

export default api;
API_EOF

# 6. –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç—ã –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è Service Worker
echo "üì¶ –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–µ —Å–∫—Ä–∏–ø—Ç—ã..."
cat > /root/escort-project/client/public/disable-sw.js << 'SW_EOF'
(function() {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É Service Worker
  if ('serviceWorker' in navigator) {
    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ Service Worker –∏ —É–¥–∞–ª—è–µ–º –∏—Ö
    navigator.serviceWorker.getRegistrations().then(function(registrations) {
      console.log("–ù–∞–π–¥–µ–Ω–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π Service Worker:", registrations.length);
      if (registrations.length > 0) {
        for(let registration of registrations) {
          registration.unregister();
          console.log('Service Worker –æ—Ç–∫–ª—é—á–µ–Ω:', registration);
        }
        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ SW –±–æ–ª—å—à–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
        if (window.caches) {
          caches.keys().then(function(names) {
            for (let name of names) {
              caches.delete(name);
              console.log('–ö—ç—à —É–¥–∞–ª–µ–Ω:', name);
            }
          });
        }
        console.log("–í—Å–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ Service Worker —É–¥–∞–ª–µ–Ω—ã");
      }
    }).catch(function(error) {
      console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ Service Worker:', error);
    });

    // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –º–µ—Ç–æ–¥ register –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤—ã—Ö Service Worker
    const originalRegister = navigator.serviceWorker.register;
    navigator.serviceWorker.register = function() {
      console.warn('üõë –ü–æ–ø—ã—Ç–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ Service Worker –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞');
      return Promise.reject(new Error('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è Service Worker –æ—Ç–∫–ª—é—á–µ–Ω–∞'));
    };
    
    console.log('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è Service Worker –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞');
  }
})();
SW_EOF

# 7. –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
cat > /root/escort-project/client/public/fix-structured-data.js << 'STRUCT_EOF'
(function() {
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ head –¥–æ–∫—É–º–µ–Ω—Ç–∞
  function fixStructuredData() {
    // –ò—â–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã script —Å —Ç–∏–ø–æ–º application/ld+json
    const jsonScripts = document.querySelectorAll('script[type="application/ld+json"]');
    
    // –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω—ã JSON —Å–∫—Ä–∏–ø—Ç—ã –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –º–µ—Å—Ç–µ
    if (jsonScripts.length > 0) {
      console.log("–ù–∞–π–¥–µ–Ω—ã —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –ø–µ—Ä–µ–º–µ—â–∞–µ–º –≤ head...");
      
      // –ü–µ—Ä–µ–º–µ—â–∞–µ–º –∫–∞–∂–¥—ã–π —Å–∫—Ä–∏–ø—Ç –≤ head
      jsonScripts.forEach(script => {
        // –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–∫—Ä–∏–ø—Ç–∞
        const content = script.textContent;
        const type = script.type;
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –≤ head
        const newScript = document.createElement('script');
        newScript.type = type;
        newScript.textContent = content;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤ head
        document.head.appendChild(newScript);
        
        // –£–¥–∞–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç
        script.parentNode.removeChild(script);
      });
      
      console.log("–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã –≤ head.");
    }
  }
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', fixStructuredData);
  } else {
    fixStructuredData();
  }
})();
STRUCT_EOF

# 8. –°–æ–∑–¥–∞–µ–º SQL-—Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –≥–æ—Ä–æ–¥–æ–≤
echo "üî§ –°–æ–∑–¥–∞–µ–º SQL-—Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –≥–æ—Ä–æ–¥–æ–≤..."
cat > /root/escort-project/sort-cities.sql << 'SQL_EOF'
-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—è sortOrder –≤ —Ç–∞–±–ª–∏—Ü–µ City
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 
    FROM information_schema.columns 
    WHERE table_name='City' AND column_name='sortOrder'
  ) THEN
    -- –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –∫–æ–ª–æ–Ω–∫—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
    ALTER TABLE "City" ADD COLUMN "sortOrder" SERIAL;
  END IF;
END$$;

-- –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Ä—è–¥–æ–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –∞–ª—Ñ–∞–≤–∏—Ç–Ω—ã–º –ø–æ—Ä—è–¥–∫–æ–º
WITH sorted_cities AS (
  SELECT 
    id, 
    ROW_NUMBER() OVER (ORDER BY name ASC) AS row_num
  FROM "City"
)
UPDATE "City" 
SET "sortOrder" = sorted_cities.row_num
FROM sorted_cities
WHERE "City".id = sorted_cities.id;

-- –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
SELECT id, name, "sortOrder" FROM "City" ORDER BY "sortOrder";
SQL_EOF

# 9. –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª schema.prisma –Ω–∞–ø—Ä—è–º—É—é
echo "üîß –û–±–Ω–æ–≤–ª—è–µ–º schema.prisma –Ω–∞–ø—Ä—è–º—É—é..."
SCHEMA_FILE="/root/escort-project/server/prisma/schema.prisma"
if [ -f "$SCHEMA_FILE" ]; then
  cp "$SCHEMA_FILE" "${SCHEMA_FILE}.bak"
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—è order –≤ –º–æ–¥–µ–ª–∏ Profile
  if ! grep -q "order Int?" "$SCHEMA_FILE"; then
    sed -i '/model Profile {/,/}/s/}$/  order Int?\n}/' "$SCHEMA_FILE"
    echo "‚úÖ –ü–æ–ª–µ order –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –º–æ–¥–µ–ª—å Profile —Å—Ö–µ–º—ã Prisma"
  else
    echo "‚úÖ –ü–æ–ª–µ order —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Å—Ö–µ–º–µ Prisma"
  fi
else
  echo "‚ùå –§–∞–π–ª schema.prisma –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: $SCHEMA_FILE"
fi

# 10. –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose up -d

# 11. –ñ–¥–µ–º –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
sleep 15

# 12. –ö–æ–ø–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–µ —Å–∫—Ä–∏–ø—Ç—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
echo "üìã –ö–æ–ø–∏—Ä—É–µ–º —Å–∫—Ä–∏–ø—Ç—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
docker cp /root/escort-project/client/public/disable-sw.js escort-client:/usr/share/nginx/html/
docker cp /root/escort-project/client/public/fix-structured-data.js escort-client:/usr/share/nginx/html/

# 13. –û–±–Ω–æ–≤–ª—è–µ–º index.html –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–æ–≤
echo "üñå –û–±–Ω–æ–≤–ª—è–µ–º index.html..."
cat > /tmp/index.html << 'INDEX_HTML_EOF'
<!DOCTYPE html>
<html lang="ru">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta
      name="description"
      content="–≠—Å–∫–æ—Ä—Ç —É—Å–ª—É–≥–∏ –≤ –†–æ—Å—Å–∏–∏. –ê–Ω–∫–µ—Ç—ã VIP –¥–µ–≤—É—à–µ–∫ —Å —Ñ–æ—Ç–æ –∏ –æ—Ç–∑—ã–≤–∞–º–∏. –í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Å–µ—Ä–≤–∏—Å–∞ –∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å."
    />
    <link rel="apple-touch-icon" href="/logo192.png" />
    <link rel="manifest" href="/manifest.json" />
    <title>–ü—Ä–æ—Å—Ç–∏—Ç—É—Ç–∫–∏ –†–æ—Å—Å–∏–∏ | VIP –≠—Å–∫–æ—Ä—Ç —É—Å–ª—É–≥–∏</title>
    <!-- –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è Service Worker -->
    <script src="/disable-sw.js"></script>
  </head>
  <body>
    <noscript>–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–∞–π—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–∫–ª—é—á–∏—Ç—å JavaScript.</noscript>
    <div id="root"></div>
    <!-- –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö -->
    <script src="/fix-structured-data.js"></script>
  </body>
</html>
INDEX_HTML_EOF

docker cp /tmp/index.html escort-client:/usr/share/nginx/html/index.html

# 14. –ü—Ä–∏–º–µ–Ω—è–µ–º SQL –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –≥–æ—Ä–æ–¥–æ–≤
echo "üîÑ –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –≥–æ—Ä–æ–¥–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö..."
docker exec -i escort-postgres psql -U postgres escort_db < /root/escort-project/sort-cities.sql

# 15. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º Nginx
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º Nginx..."
docker exec escort-client nginx -s reload

# 16. –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π API —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
echo "üåê –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π API-—Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è..."
cat > /root/escort-project/temp-api.js << 'TEMP_API_EOF'
const express = require('express');
const cors = require('cors');
const app = express();
const port = 5001;

// –í–∫–ª—é—á–∞–µ–º middleware
app.use(cors({
  origin: '*',
  credentials: true,
  methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],
  allowedHeaders: ['Content-Type', 'Authorization']
}));
app.use(express.json({ limit: '50mb' }));
app.use(express.urlencoded({ extended: true, limit: '50mb' }));

// –ú–∞—Ä—à—Ä—É—Ç—ã API
app.get('/api/health', (req, res) => {
  res.json({ status: 'ok', timestamp: new Date().toISOString() });
});

// –£—Å–ª—É–≥–∏ (–≤—Ä–µ–º–µ–Ω–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç)
app.get('/api/services', (req, res) => {
  const services = [
    'classic', 'anal', 'lesbian', 'group_mmf', 'group_ffm', 'with_toys', 'in_car',
    'blowjob_with_condom', 'blowjob_without_condom', 'deep_blowjob', 'car_blowjob',
    'anilingus_to_client', 'fisting_to_client', 'kisses', 'light_domination', 'mistress'
  ];
  res.json(services);
});

// –†–∞–π–æ–Ω—ã (–≤—Ä–µ–º–µ–Ω–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç)
app.get('/api/districts/:cityId', (req, res) => {
  const districts = ["–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π", "–°–µ–≤–µ—Ä–Ω—ã–π", "–Æ–∂–Ω—ã–π", "–ó–∞–ø–∞–¥–Ω—ã–π", "–í–æ—Å—Ç–æ—á–Ω—ã–π"];
  res.json(districts);
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(port, () => {
  console.log(`‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã–π API-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${port}`);
});
TEMP_API_EOF

echo "‚úÖ –í—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!"
echo "üåê –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: https://eskortvsegorodarfreal.site"
echo ""
echo "‚ö†Ô∏è –í–ê–ñ–ù–û: –ï—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ —Å Prisma, –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π API —Å–µ—Ä–≤–µ—Ä –∫–æ–º–∞–Ω–¥–æ–π:"
echo "node /root/escort-project/temp-api.js"
